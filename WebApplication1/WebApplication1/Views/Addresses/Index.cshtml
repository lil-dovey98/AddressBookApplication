@*model IEnumerable<WebApplication1.Models.Address>*@
@model PagedList.IPagedList<WebApplication1.Models.Address>


@{
    ViewData["Title"] = "Index";
}

<h2>Entries</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <b>Forename(s)</b>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Forenames)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
             
                <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                
            </td>
        </tr>
}
    </tbody>
</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount

    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<","Index",new { page = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1})
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >","Index", new { page = Model.PageNumber + 1})
        @Html.Raw(" ");
        @Html.ActionLink(">>","Index",new { page = Model.PageCount})
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
